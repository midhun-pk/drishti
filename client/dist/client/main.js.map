{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"layout-row container\\\">\\n  <div class=\\\"dt-sidebar\\\">\\n    <div class=\\\"logo\\\"></div>\\n    <div class=\\\"button\\\">\\n      <i class=\\\"material-icons\\\">burst_mode</i>\\n    </div>\\n  </div>\\n  <div class=\\\"sidebar\\\">\\n    <div class=\\\"layout-row layout-align-space-between\\\">\\n      <h2>\\n        Task List\\n      </h2>\\n      <i class=\\\"material-icons\\\">list</i>\\n    </div>\\n    <div *ngIf=\\\"tasks\\\">\\n      <div class=\\\"task\\\" *ngFor=\\\"let task of tasks\\\" (click)=\\\"onClick(task.name)\\\">\\n        {{ task.name }}\\n      </div>\\n    </div>\\n    <!-->div class=\\\"task\\\">\\n      Task 2\\n    </div>\\n    <div class=\\\"task\\\">\\n      Task 3\\n    </div-->\\n  </div>\\n  <div class=\\\"main-layout\\\">\\n    <div class=\\\"frames\\\">\\n      <div class=\\\"frame\\\" *ngFor=\\\"let frame of frames; let i = index\\\" (click)=\\\"onImageClick(i)\\\"\\n        (mouseover)=\\\"onMouseOver(i)\\\">\\n        <img [src]=\\\"frame\\\" alt=\\\"\\\" [ngClass]=\\\"{'selected': selected[i]}\\\">\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"frames\\\">\\n      <button class=\\\"submit-button\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'client';\n  tasks: any[];\n  frames: any[];\n  selected = [];\n  prevSelected: number;\n  selectedImage: boolean;\n  selectedTask: string;\n\n  constructor(private dataService: DataService) {\n  }\n\n  ngOnInit() {\n    this.dataService.getAllTasks().subscribe((response: any[]) => {\n      this.tasks = response;\n    }, (error) => {\n      console.log(error)\n    });\n  }\n\n  onClick(task: string) {\n    this.selectedTask = task;\n    this.selectedImage = false;\n    this.selected = [];\n    this.dataService.getFrames(task).subscribe((response: any[]) => {\n      this.frames = response;\n      for (let i in this.frames) {\n        this.selected.push(false);\n      }\n    }, (error) => {\n      console.log(error)\n    })\n  }\n\n  onImageClick(index: number) {\n    if (this.selectedImage) {\n      this.prevSelected = null;\n      this.selectedImage = false;\n    }\n    else {\n      if (this.selected[index]) {\n        this.selected[index] = false;\n      } else {\n        this.prevSelected = index;\n        this.selected[index] = true;\n        this.selectedImage = true;\n      }\n    }\n  }\n\n\n  onMouseOver(index: number) {\n    if (this.selectedImage) {\n      if (index > this.prevSelected) {\n        for (let i = this.prevSelected; i <= index; i++) {\n          this.selected[i] = true;\n        }\n      }\n      if (index < this.prevSelected) {\n        for (let i = index; i <= this.prevSelected; i++) {\n          this.selected[i] = true;\n        }\n      }\n    }\n  }\n\n  onSubmit() {\n    let selectedFrames = [];\n    for (let i in this.selected) {\n      if (this.selected[i]) {\n        selectedFrames.push(this.frames[i])\n      }\n    }\n    this.dataService.saveSelected(this.selectedTask, selectedFrames).subscribe((response: any[]) => {\n      console.log(response);\n    }, (error) => {\n      console.log(error)\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\nimport { DataService } from './data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n\r\n    }\r\n\r\n    getAllTasks() {\r\n        return this.httpClient.get('/api/tasks');\r\n    }\r\n\r\n    getFrames(name: string) {\r\n        return this.httpClient.get('/api/tasks/' + name + '/frames');\r\n    }\r\n\r\n    saveSelected(task: string, frames: any[]) {\r\n        return this.httpClient.post('/api/task', {\r\n            task: task,\r\n            frames: frames\r\n        })\r\n    }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}